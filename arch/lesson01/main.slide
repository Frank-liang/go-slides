Go课程
第一节

饼干
https://github.com/icexin

* golang简介 

Go语言是Google于2009年推出的一门新的系统编程语言。

特点:

- 静态编译
- 垃圾回收
- 简洁的符号和语法
- 平坦的类型系统
- 基于CSP的并发模型。
- 高效简单的工具链。
- 丰富的标准库

* go语言作者
.image GPT.png

* go语言家谱
.image go-ancestors.png 500 _
* 为什么选择go语言

- 编译型语言，运行速度快
- 静态编译没有依赖
- 天生支持并发，充分利用多核
- 大厂支持，有后台

* 几个例子
* Hello World
.play hello.go
* Hello World(2)
.play http.go
* C10K
.play c10k.go /START OMIT/,/END OMIT/

* 并行和并发
- 并发(concurrent)不是并行(parallel)
- 一个例子，node.js具有并发的能力，但不能充分利用多核
- 写出一个能充分利用多核的程序需要很深的系统编程积淀
- 得益于优秀的设计，go可以轻松地写出跑满所有CPU的程序

* go语言的应用

- Docker，正火热的容器化技术
- kubernetes，Goole Borg的开源实现
- Etcd, 类似zookeeper的高可用key-value存储
* 课程安排
- 基础部分
- 进阶部分
- 项目实战
* 基础知识
- 基础数据类型
- 复合数据类型
- 控制结构
- 函数，方法，接口
* 高阶知识
- gouroutine,channel
- 锁与条件竞争，如何进行debug
- 包管理，单测和benchmark
- 反射和cgo以及unsafe
* 项目实战
- 使用golang编写的监控系统
- agent采集
- kafka传输
- es存储，kibana展示
* 开始前的环境准备
* 安装
下载地址(官网):
.link https://golang.org/dl/ https://golang.org/dl/

下载地址(国内):
.link https://dl.gocn.io/ https://dl.gocn.io/

* 初始化环境

- GOROOT 放置go的标准库和工具链
  $HOME/local/go (linux, mac) 
  c:\local\go (windows) 

- GOPATH 放置第三方代码和自己的工程
  $HOME/go (linux, mac) 
  c:\go (windows)

- PATH
  export PATH=$GOROOT/bin:$GOPATH/bin:$PATH

* Hello World

.play hello.go



* 编译运行

- go build hello.go && ./hello
- go run hello.go
* IDE选择
- atom 配合go-plus插件(课程选择)
- sublime 配合gosublime插件
- LiteIDE 专用IDE，没用过
- emacs + spacemacs配置(我在使用)
- Goland JetBrains出品 
* 常用工具
- 一键编译 go build
  go build github.com/icexin/markdown

- 一键测试 go test
  go test github.com/icexin/markdown

- 一键下载更新依赖并编译 go get
  go get github.com/icexin/markdown

- 自动文档工具 godoc
  godoc -http=:9090

- 在线查看文档
  godoc.org/github.com/golang/protobuf/proto


